diff --git a/12_Hand_gesture_recognition_v2/src/hand_gesture_recognition.cpp b/12_Hand_gesture_recognition_v2/src/hand_gesture_recognition.cpp
index 9fa420a..e5e9ea4 100644
--- a/12_Hand_gesture_recognition_v2/src/hand_gesture_recognition.cpp
+++ b/12_Hand_gesture_recognition_v2/src/hand_gesture_recognition.cpp
@@ -40,13 +40,20 @@
 #include <builtin_fp16.h>
 #include <opencv2/opencv.hpp>
 #include "wayland.h"
-
+#include <arpa/inet.h>
+#include <cstring>
+#include <iostream>
+#include <netinet/in.h>
+#include <sys/socket.h>
+#include <unistd.h>
 
 using namespace std;
 using namespace cv;
 
 /* DRP-AI TVM[*1] Runtime object */
 MeraDrpRuntimeWrapper runtime;
+#define PORT 9090
+int sock = 0;
 
 /*Global Variables*/
 static float drpai_output_buf[INF_OUT_SIZE];
@@ -631,9 +638,14 @@ void capture_frame(std::string gstreamer_pipeline )
                         CHAR_SCALE_SMALL, Scalar(255, 255, 255), HC_CHAR_THICKNESS);
 
             if (HAND_COUNT == 1)
-            {            
+            {    
+		char* message = &GESTURE[0];
+		//std::cout << message;
+                send(sock, message, strlen(message), 0);
                 stream.str("");
-                stream << "Gesture Detected: "<<GESTURE;
+                stream << "Gesture Detected: " <<GESTURE;
+                //const char* message = GESTURE.c_str();
+                //send(clientSocket, message, strlen(message), 0);
                 str = stream.str();
                 putText(g_frame, str,Point(HAND_STR_X, HAND_STR_Y), FONT_HERSHEY_SIMPLEX, 
                             GESTURE_SCALE_SMALL, Scalar(0, 0, 0), 1.5*GESTURE_CHAR_THICKNESS);
@@ -938,6 +950,37 @@ main_proc_end:
 
 int main(int argc, char *argv[])
 {
+/*
+    clientSocket = socket(AF_INET, SOCK_STREAM, 0);
+
+    // specifying address
+    sockaddr_in serverAddress;
+    serverAddress.sin_family = AF_INET;
+    serverAddress.sin_port = htons(8080);
+    serverAddress.sin_addr.s_addr = inet_addr("192.168.0.48");
+
+    // sending connection request
+    connect(clientSocket, (struct sockaddr*)&serverAddress,sizeof(serverAddress));
+  */
+    struct sockaddr_in serv_addr;
+    if ((sock = socket(AF_INET, SOCK_STREAM, 0)) < 0) {
+    printf("\n Socket creation error \n");
+    return -1;
+    }
+    //printf("Hey %d", sock);
+    std::cout<<"Hey "<<sock <<std::endl;
+    serv_addr.sin_family = AF_INET;
+    serv_addr.sin_port = htons(PORT);
+
+    if (inet_pton(AF_INET, "127.0.0.1", &serv_addr.sin_addr) <= 0) {
+        printf("\nInvalid address/ Address not supported \n");
+        return -1;
+    }
+
+    if (connect(sock, (struct sockaddr *)&serv_addr, sizeof(serv_addr))) {
+        printf("\nConnection Failed \n");
+        return -1;
+    }
 
     int32_t create_thread_ai = -1;
     int32_t create_thread_key = -1;
@@ -946,7 +989,7 @@ int main(int argc, char *argv[])
     int8_t main_proc = 0;
     int32_t sem_create = -1;
     std::string input_source = argv[1];
-    std::cout << "Starting Hand Gesture Recognition Application" << std::endl;
+    std::cout << "123 Starting Hand Gesture Recognition Application" << std::endl;
 
     /*Disable OpenCV Accelerator due to the use of multithreading */
     unsigned long OCA_list[16];
@@ -1090,6 +1133,7 @@ end_threads:
     /* Exit the program */
     wayland.exit();
     close(drpai_fd);
+    close(sock);
     return 0;
-  
-  }
\ No newline at end of file
+
+  }
